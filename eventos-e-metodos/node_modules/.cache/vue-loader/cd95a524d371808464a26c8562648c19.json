{"remainingRequest":"/home/romulo/.nvm/versions/node/v10.22.1/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/romulo/code/Vue_test/eventos-e-metodos/App.vue?vue&type=style&index=0&id=472cff63&scoped=true&lang=css&","dependencies":[{"path":"/home/romulo/code/Vue_test/eventos-e-metodos/App.vue","mtime":1611415669969},{"path":"/home/romulo/.nvm/versions/node/v10.22.1/lib/node_modules/@vue/cli-service-global/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/romulo/.nvm/versions/node/v10.22.1/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/romulo/.nvm/versions/node/v10.22.1/lib/node_modules/@vue/cli-service-global/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/romulo/.nvm/versions/node/v10.22.1/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/romulo/.nvm/versions/node/v10.22.1/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmxpbmVfdGhyb3VnaCB7CiAgICB0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDsKICB9Ci50YXNrLWl0ZW0gewpjdXJzb3I6IHBvaW50ZXI7Cn0KCg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":".","sourcesContent":["<template>\n  <div>\n    <h1>Minha lista de tarefas:</h1>\n    <button @click=\"handleShowHideList\">\n      Ver a lista\n    </button>\n    <br>\n\n    <input \n      type=\"text\"\n      @keyup.enter=\"addTask\"\n      v-focus \n      v-model=\"currentTask\">\n\n    <ul v-if=\"showList\">\n      <li v-for=\"(task, index) in tasks\"\n      @dblclick=\"complete(task)\"\n      :key=\"`${task}-${index}`\"\n      class=\"task-item\"\n      :class=\"{\n        'line_through': task.isDone\n        }\"\n      >\n        {{ task.name }}\n        <button\n        @click=\"remove(task)\"\n        >&times;</button>\n      </li>\n    </ul>\n    <p v-else> Lista de tarefas escondidas</p>\n\n  </div>\n</template>\n\n<script>\nconst focus = {\n  inserted: (el) => {\n    el.focus()\n  }\n}\nexport default {\n  directives: {\n    focus\n  },\n data: () => ({\n   currentTask: '',\n   showList: false,\n   tasks: [\n     {name: 'Fazer o curso', isDone: false}\n   ]\n }),\n methods: {\n   complete (task) {\n    this.tasks = this.tasks.map(t => { \n      if (t.name === task.name) {\n        return { ...t, isDone: !t.isDone }\n      }\n      return {...t}\n    })\n   },\n   handleShowHideList () {\n     this.showList = !this.showList\n   },\n   remove (task) {\n     this.tasks = this.tasks.filter(t => t.name !== task.name)\n   },\n   addTask () {\n     this.tasks.push({ \n       name: this.currentTask,\n       isDone: false\n     })\n     this.currentTask = ''\n   },\n }\n}\n</script>\n\n<style scoped>\n.line_through {\n    text-decoration: line-through;\n  }\n.task-item {\ncursor: pointer;\n}\n\n</style>"]}]}